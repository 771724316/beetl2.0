// Generated from E:\lijz\javamonkey\bee\research\antlrworks2\projects\beetl\BeetlLexer.g4 by ANTLR 4.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BeetlLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		If=1, For=2, Else=3, While=4, Switch=5, Select=6, Return=7, Break=8, Continue=9, 
		Var=10, Directive=11, Case=12, Default=13, LEFT_BRACE=14, RIGHT_BRACE=15, 
		LEFT_PAR=16, RIGHT_PAR=17, LEFT_SQBR=18, RIGHT_SQBR=19, INCREASE=20, DECREASE=21, 
		VIRTUAL=22, ADD=23, MIN=24, MUlTIP=25, DIV=26, MOD=27, EQUAL=28, NOT_EQUAL=29, 
		ASSIN=30, LARGE=31, LESS=32, NOT=33, AND=34, OR=35, QUESTOIN=36, AT=37, 
		NULL=38, TRUE=39, FALSE=40, END=41, COMMA=42, COLON=43, PERIOD=44, FOR_IN=45, 
		HexLiteral=46, DecimalLiteral=47, OctalLiteral=48, FloatingPointLiteral=49, 
		CharacterLiteral=50, StringLiteral=51, Identifier=52, COMMENT_OPEN=53, 
		PARAS=54, WS1=55, COMMENT_END=56, WS=57, LINE_COMMENT=58;
	public static final int ISLAND = 1;
	public static String[] modeNames = {
		"DEFAULT_MODE", "ISLAND"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'if'", "'for'", "'else'", "'while'", "'switch'", "'select'", "'return'", 
		"'break'", "'continue'", "'var'", "Directive", "'case'", "'default'", 
		"'{'", "'}'", "'('", "')'", "'['", "']'", "'++'", "'--'", "'.~'", "'+'", 
		"'-'", "'*'", "'/'", "'%'", "'=='", "'!='", "'='", "'>'", "'<'", "'!'", 
		"'&&'", "'||'", "'?'", "'@'", "'null'", "'true'", "'false'", "';'", "','", 
		"':'", "'.'", "'in'", "HexLiteral", "DecimalLiteral", "OctalLiteral", 
		"FloatingPointLiteral", "CharacterLiteral", "StringLiteral", "Identifier", 
		"COMMENT_OPEN", "PARAS", "WS1", "COMMENT_END", "WS", "LINE_COMMENT"
	};
	public static final String[] ruleNames = {
		"If", "For", "Else", "While", "Switch", "Select", "Return", "Break", "Continue", 
		"Var", "Directive", "Case", "Default", "LEFT_BRACE", "RIGHT_BRACE", "LEFT_PAR", 
		"RIGHT_PAR", "LEFT_SQBR", "RIGHT_SQBR", "INCREASE", "DECREASE", "VIRTUAL", 
		"ADD", "MIN", "MUlTIP", "DIV", "MOD", "EQUAL", "NOT_EQUAL", "ASSIN", "LARGE", 
		"LESS", "NOT", "AND", "OR", "QUESTOIN", "AT", "NULL", "TRUE", "FALSE", 
		"END", "COMMA", "COLON", "PERIOD", "FOR_IN", "HexLiteral", "DecimalLiteral", 
		"OctalLiteral", "HexDigit", "IntegerTypeSuffix", "FloatingPointLiteral", 
		"Exponent", "FloatTypeSuffix", "CharacterLiteral", "StringLiteral", "EscapeSequence", 
		"OctalEscape", "UnicodeEscape", "Identifier", "Letter", "JavaIDDigit", 
		"COMMENT_OPEN", "PARAS", "WS1", "COMMENT_END", "WS", "LINE_COMMENT"
	};


	public BeetlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BeetlLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 61: COMMENT_OPEN_action((RuleContext)_localctx, actionIndex); break;

		case 63: WS1_action((RuleContext)_localctx, actionIndex); break;

		case 64: COMMENT_END_action((RuleContext)_localctx, actionIndex); break;

		case 65: WS_action((RuleContext)_localctx, actionIndex); break;

		case 66: LINE_COMMENT_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void COMMENT_OPEN_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: _mode = ISLAND; _channel = HIDDEN;  break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: _channel = HIDDEN;  break;
		}
	}
	private void COMMENT_END_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: _mode = DEFAULT_MODE; _channel = HIDDEN;  break;
		}
	}
	private void LINE_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 4: _channel = HIDDEN;  break;
		}
	}
	private void WS1_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: _channel = HIDDEN;  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2<\u021e\b\1\b\1\4"+
		"\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n"+
		"\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t"+
		"=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\3\2\3\2\3\2\3\3\3\3\3\3\3"+
		"\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6"+
		"\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3"+
		"\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3"+
		"\f\5\f\u00d7\n\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25"+
		"\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32"+
		"\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3!"+
		"\3!\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3"+
		"(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3/\3/\3/\6"+
		"/\u013b\n/\r/\16/\u013c\3/\5/\u0140\n/\3\60\3\60\3\60\7\60\u0145\n\60"+
		"\f\60\16\60\u0148\13\60\5\60\u014a\n\60\3\60\5\60\u014d\n\60\3\61\3\61"+
		"\6\61\u0151\n\61\r\61\16\61\u0152\3\61\5\61\u0156\n\61\3\62\3\62\3\63"+
		"\3\63\3\64\6\64\u015d\n\64\r\64\16\64\u015e\3\64\3\64\7\64\u0163\n\64"+
		"\f\64\16\64\u0166\13\64\3\64\5\64\u0169\n\64\3\64\5\64\u016c\n\64\3\64"+
		"\3\64\6\64\u0170\n\64\r\64\16\64\u0171\3\64\5\64\u0175\n\64\3\64\5\64"+
		"\u0178\n\64\3\64\6\64\u017b\n\64\r\64\16\64\u017c\3\64\3\64\5\64\u0181"+
		"\n\64\3\64\6\64\u0184\n\64\r\64\16\64\u0185\3\64\3\64\3\64\3\64\3\64\5"+
		"\64\u018d\n\64\3\64\7\64\u0190\n\64\f\64\16\64\u0193\13\64\3\64\3\64\7"+
		"\64\u0197\n\64\f\64\16\64\u019a\13\64\5\64\u019c\n\64\3\64\3\64\5\64\u01a0"+
		"\n\64\3\64\6\64\u01a3\n\64\r\64\16\64\u01a4\3\64\5\64\u01a8\n\64\5\64"+
		"\u01aa\n\64\3\65\3\65\5\65\u01ae\n\65\3\65\6\65\u01b1\n\65\r\65\16\65"+
		"\u01b2\3\66\3\66\3\67\3\67\3\67\5\67\u01ba\n\67\3\67\3\67\38\38\38\78"+
		"\u01c1\n8\f8\168\u01c4\138\38\38\39\39\39\39\59\u01cc\n9\3:\3:\3:\3:\3"+
		":\3:\3:\3:\3:\5:\u01d7\n:\3;\3;\3;\3;\3;\3;\3;\3<\3<\3<\7<\u01e3\n<\f"+
		"<\16<\u01e6\13<\3=\3=\3>\3>\3?\3?\3?\3?\3?\3@\3@\3@\3@\3@\3@\7@\u01f7"+
		"\n@\f@\16@\u01fa\13@\3A\6A\u01fd\nA\rA\16A\u01fe\3A\3A\3B\3B\3B\3B\3B"+
		"\3C\6C\u0209\nC\rC\16C\u020a\3C\3C\3D\3D\3D\3D\7D\u0213\nD\fD\16D\u0216"+
		"\13D\3D\5D\u0219\nD\3D\3D\3D\3D\2E\4\3\1\6\4\1\b\5\1\n\6\1\f\7\1\16\b"+
		"\1\20\t\1\22\n\1\24\13\1\26\f\1\30\r\1\32\16\1\34\17\1\36\20\1 \21\1\""+
		"\22\1$\23\1&\24\1(\25\1*\26\1,\27\1.\30\1\60\31\1\62\32\1\64\33\1\66\34"+
		"\18\35\1:\36\1<\37\1> \1@!\1B\"\1D#\1F$\1H%\1J&\1L\'\1N(\1P)\1R*\1T+\1"+
		"V,\1X-\1Z.\1\\/\1^\60\1`\61\1b\62\1d\2\1f\2\1h\63\1j\2\1l\2\1n\64\1p\65"+
		"\1r\2\1t\2\1v\2\1x\66\1z\2\1|\2\1~\67\2\u00808\1\u00829\3\u0084:\4\u0086"+
		";\5\u0088<\6\4\2\3\20\4\2ZZzz\5\2\62;CHch\4\2NNnn\4\2RRrr\4\2--//\4\2"+
		"GGgg\6\2FFHHffhh\4\2))^^\4\2$$^^\n\2$$))^^ddhhppttvv\16\2&&C\\aac|\u00c2"+
		"\u00d8\u00da\u00f8\u00fa\u2001\u3042\u3191\u3302\u3381\u3402\u3d2f\u4e02"+
		"\ua001\uf902\ufb01\21\2\62;\u0662\u066b\u06f2\u06fb\u0968\u0971\u09e8"+
		"\u09f1\u0a68\u0a71\u0ae8\u0af1\u0b68\u0b71\u0be9\u0bf1\u0c68\u0c71\u0ce8"+
		"\u0cf1\u0d68\u0d71\u0e52\u0e5b\u0ed2\u0edb\u1042\u104b\5\2\13\f\16\17"+
		"\"\"\4\2\f\f\17\17\u0240\2\4\3\2\2\2\2\6\3\2\2\2\2\b\3\2\2\2\2\n\3\2\2"+
		"\2\2\f\3\2\2\2\2\16\3\2\2\2\2\20\3\2\2\2\2\22\3\2\2\2\2\24\3\2\2\2\2\26"+
		"\3\2\2\2\2\30\3\2\2\2\2\32\3\2\2\2\2\34\3\2\2\2\2\36\3\2\2\2\2 \3\2\2"+
		"\2\2\"\3\2\2\2\2$\3\2\2\2\2&\3\2\2\2\2(\3\2\2\2\2*\3\2\2\2\2,\3\2\2\2"+
		"\2.\3\2\2\2\2\60\3\2\2\2\2\62\3\2\2\2\2\64\3\2\2\2\2\66\3\2\2\2\28\3\2"+
		"\2\2\2:\3\2\2\2\2<\3\2\2\2\2>\3\2\2\2\2@\3\2\2\2\2B\3\2\2\2\2D\3\2\2\2"+
		"\2F\3\2\2\2\2H\3\2\2\2\2J\3\2\2\2\2L\3\2\2\2\2N\3\2\2\2\2P\3\2\2\2\2R"+
		"\3\2\2\2\2T\3\2\2\2\2V\3\2\2\2\2X\3\2\2\2\2Z\3\2\2\2\2\\\3\2\2\2\2^\3"+
		"\2\2\2\2`\3\2\2\2\2b\3\2\2\2\2h\3\2\2\2\2n\3\2\2\2\2p\3\2\2\2\2x\3\2\2"+
		"\2\2~\3\2\2\2\3\u0080\3\2\2\2\3\u0082\3\2\2\2\3\u0084\3\2\2\2\3\u0086"+
		"\3\2\2\2\3\u0088\3\2\2\2\4\u008a\3\2\2\2\6\u008d\3\2\2\2\b\u0091\3\2\2"+
		"\2\n\u0096\3\2\2\2\f\u009c\3\2\2\2\16\u00a3\3\2\2\2\20\u00aa\3\2\2\2\22"+
		"\u00b1\3\2\2\2\24\u00b7\3\2\2\2\26\u00c0\3\2\2\2\30\u00d6\3\2\2\2\32\u00d8"+
		"\3\2\2\2\34\u00dd\3\2\2\2\36\u00e5\3\2\2\2 \u00e7\3\2\2\2\"\u00e9\3\2"+
		"\2\2$\u00eb\3\2\2\2&\u00ed\3\2\2\2(\u00ef\3\2\2\2*\u00f1\3\2\2\2,\u00f4"+
		"\3\2\2\2.\u00f7\3\2\2\2\60\u00fa\3\2\2\2\62\u00fc\3\2\2\2\64\u00fe\3\2"+
		"\2\2\66\u0100\3\2\2\28\u0102\3\2\2\2:\u0104\3\2\2\2<\u0107\3\2\2\2>\u010a"+
		"\3\2\2\2@\u010c\3\2\2\2B\u010e\3\2\2\2D\u0110\3\2\2\2F\u0112\3\2\2\2H"+
		"\u0115\3\2\2\2J\u0118\3\2\2\2L\u011a\3\2\2\2N\u011c\3\2\2\2P\u0121\3\2"+
		"\2\2R\u0126\3\2\2\2T\u012c\3\2\2\2V\u012e\3\2\2\2X\u0130\3\2\2\2Z\u0132"+
		"\3\2\2\2\\\u0134\3\2\2\2^\u0137\3\2\2\2`\u0149\3\2\2\2b\u014e\3\2\2\2"+
		"d\u0157\3\2\2\2f\u0159\3\2\2\2h\u01a9\3\2\2\2j\u01ab\3\2\2\2l\u01b4\3"+
		"\2\2\2n\u01b6\3\2\2\2p\u01bd\3\2\2\2r\u01cb\3\2\2\2t\u01d6\3\2\2\2v\u01d8"+
		"\3\2\2\2x\u01df\3\2\2\2z\u01e7\3\2\2\2|\u01e9\3\2\2\2~\u01eb\3\2\2\2\u0080"+
		"\u01f0\3\2\2\2\u0082\u01fc\3\2\2\2\u0084\u0202\3\2\2\2\u0086\u0208\3\2"+
		"\2\2\u0088\u020e\3\2\2\2\u008a\u008b\7k\2\2\u008b\u008c\7h\2\2\u008c\5"+
		"\3\2\2\2\u008d\u008e\7h\2\2\u008e\u008f\7q\2\2\u008f\u0090\7t\2\2\u0090"+
		"\7\3\2\2\2\u0091\u0092\7g\2\2\u0092\u0093\7n\2\2\u0093\u0094\7u\2\2\u0094"+
		"\u0095\7g\2\2\u0095\t\3\2\2\2\u0096\u0097\7y\2\2\u0097\u0098\7j\2\2\u0098"+
		"\u0099\7k\2\2\u0099\u009a\7n\2\2\u009a\u009b\7g\2\2\u009b\13\3\2\2\2\u009c"+
		"\u009d\7u\2\2\u009d\u009e\7y\2\2\u009e\u009f\7k\2\2\u009f\u00a0\7v\2\2"+
		"\u00a0\u00a1\7e\2\2\u00a1\u00a2\7j\2\2\u00a2\r\3\2\2\2\u00a3\u00a4\7u"+
		"\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6\7n\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8"+
		"\7e\2\2\u00a8\u00a9\7v\2\2\u00a9\17\3\2\2\2\u00aa\u00ab\7t\2\2\u00ab\u00ac"+
		"\7g\2\2\u00ac\u00ad\7v\2\2\u00ad\u00ae\7w\2\2\u00ae\u00af\7t\2\2\u00af"+
		"\u00b0\7p\2\2\u00b0\21\3\2\2\2\u00b1\u00b2\7d\2\2\u00b2\u00b3\7t\2\2\u00b3"+
		"\u00b4\7g\2\2\u00b4\u00b5\7c\2\2\u00b5\u00b6\7m\2\2\u00b6\23\3\2\2\2\u00b7"+
		"\u00b8\7e\2\2\u00b8\u00b9\7q\2\2\u00b9\u00ba\7p\2\2\u00ba\u00bb\7v\2\2"+
		"\u00bb\u00bc\7k\2\2\u00bc\u00bd\7p\2\2\u00bd\u00be\7w\2\2\u00be\u00bf"+
		"\7g\2\2\u00bf\25\3\2\2\2\u00c0\u00c1\7x\2\2\u00c1\u00c2\7c\2\2\u00c2\u00c3"+
		"\7t\2\2\u00c3\27\3\2\2\2\u00c4\u00c5\7F\2\2\u00c5\u00c6\7K\2\2\u00c6\u00c7"+
		"\7T\2\2\u00c7\u00c8\7G\2\2\u00c8\u00c9\7E\2\2\u00c9\u00ca\7V\2\2\u00ca"+
		"\u00cb\7K\2\2\u00cb\u00cc\7X\2\2\u00cc\u00d7\7G\2\2\u00cd\u00ce\7f\2\2"+
		"\u00ce\u00cf\7k\2\2\u00cf\u00d0\7t\2\2\u00d0\u00d1\7g\2\2\u00d1\u00d2"+
		"\7e\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4\7k\2\2\u00d4\u00d5\7x\2\2\u00d5"+
		"\u00d7\7g\2\2\u00d6\u00c4\3\2\2\2\u00d6\u00cd\3\2\2\2\u00d7\31\3\2\2\2"+
		"\u00d8\u00d9\7e\2\2\u00d9\u00da\7c\2\2\u00da\u00db\7u\2\2\u00db\u00dc"+
		"\7g\2\2\u00dc\33\3\2\2\2\u00dd\u00de\7f\2\2\u00de\u00df\7g\2\2\u00df\u00e0"+
		"\7h\2\2\u00e0\u00e1\7c\2\2\u00e1\u00e2\7w\2\2\u00e2\u00e3\7n\2\2\u00e3"+
		"\u00e4\7v\2\2\u00e4\35\3\2\2\2\u00e5\u00e6\7}\2\2\u00e6\37\3\2\2\2\u00e7"+
		"\u00e8\7\177\2\2\u00e8!\3\2\2\2\u00e9\u00ea\7*\2\2\u00ea#\3\2\2\2\u00eb"+
		"\u00ec\7+\2\2\u00ec%\3\2\2\2\u00ed\u00ee\7]\2\2\u00ee\'\3\2\2\2\u00ef"+
		"\u00f0\7_\2\2\u00f0)\3\2\2\2\u00f1\u00f2\7-\2\2\u00f2\u00f3\7-\2\2\u00f3"+
		"+\3\2\2\2\u00f4\u00f5\7/\2\2\u00f5\u00f6\7/\2\2\u00f6-\3\2\2\2\u00f7\u00f8"+
		"\7\60\2\2\u00f8\u00f9\7\u0080\2\2\u00f9/\3\2\2\2\u00fa\u00fb\7-\2\2\u00fb"+
		"\61\3\2\2\2\u00fc\u00fd\7/\2\2\u00fd\63\3\2\2\2\u00fe\u00ff\7,\2\2\u00ff"+
		"\65\3\2\2\2\u0100\u0101\7\61\2\2\u0101\67\3\2\2\2\u0102\u0103\7\'\2\2"+
		"\u01039\3\2\2\2\u0104\u0105\7?\2\2\u0105\u0106\7?\2\2\u0106;\3\2\2\2\u0107"+
		"\u0108\7#\2\2\u0108\u0109\7?\2\2\u0109=\3\2\2\2\u010a\u010b\7?\2\2\u010b"+
		"?\3\2\2\2\u010c\u010d\7@\2\2\u010dA\3\2\2\2\u010e\u010f\7>\2\2\u010fC"+
		"\3\2\2\2\u0110\u0111\7#\2\2\u0111E\3\2\2\2\u0112\u0113\7(\2\2\u0113\u0114"+
		"\7(\2\2\u0114G\3\2\2\2\u0115\u0116\7~\2\2\u0116\u0117\7~\2\2\u0117I\3"+
		"\2\2\2\u0118\u0119\7A\2\2\u0119K\3\2\2\2\u011a\u011b\7B\2\2\u011bM\3\2"+
		"\2\2\u011c\u011d\7p\2\2\u011d\u011e\7w\2\2\u011e\u011f\7n\2\2\u011f\u0120"+
		"\7n\2\2\u0120O\3\2\2\2\u0121\u0122\7v\2\2\u0122\u0123\7t\2\2\u0123\u0124"+
		"\7w\2\2\u0124\u0125\7g\2\2\u0125Q\3\2\2\2\u0126\u0127\7h\2\2\u0127\u0128"+
		"\7c\2\2\u0128\u0129\7n\2\2\u0129\u012a\7u\2\2\u012a\u012b\7g\2\2\u012b"+
		"S\3\2\2\2\u012c\u012d\7=\2\2\u012dU\3\2\2\2\u012e\u012f\7.\2\2\u012fW"+
		"\3\2\2\2\u0130\u0131\7<\2\2\u0131Y\3\2\2\2\u0132\u0133\7\60\2\2\u0133"+
		"[\3\2\2\2\u0134\u0135\7k\2\2\u0135\u0136\7p\2\2\u0136]\3\2\2\2\u0137\u0138"+
		"\7\62\2\2\u0138\u013a\t\2\2\2\u0139\u013b\5d\62\2\u013a\u0139\3\2\2\2"+
		"\u013b\u013c\3\2\2\2\u013c\u013a\3\2\2\2\u013c\u013d\3\2\2\2\u013d\u013f"+
		"\3\2\2\2\u013e\u0140\5f\63\2\u013f\u013e\3\2\2\2\u013f\u0140\3\2\2\2\u0140"+
		"_\3\2\2\2\u0141\u014a\7\62\2\2\u0142\u0146\4\63;\2\u0143\u0145\4\62;\2"+
		"\u0144\u0143\3\2\2\2\u0145\u0148\3\2\2\2\u0146\u0144\3\2\2\2\u0146\u0147"+
		"\3\2\2\2\u0147\u014a\3\2\2\2\u0148\u0146\3\2\2\2\u0149\u0141\3\2\2\2\u0149"+
		"\u0142\3\2\2\2\u014a\u014c\3\2\2\2\u014b\u014d\5f\63\2\u014c\u014b\3\2"+
		"\2\2\u014c\u014d\3\2\2\2\u014da\3\2\2\2\u014e\u0150\7\62\2\2\u014f\u0151"+
		"\4\629\2\u0150\u014f\3\2\2\2\u0151\u0152\3\2\2\2\u0152\u0150\3\2\2\2\u0152"+
		"\u0153\3\2\2\2\u0153\u0155\3\2\2\2\u0154\u0156\5f\63\2\u0155\u0154\3\2"+
		"\2\2\u0155\u0156\3\2\2\2\u0156c\3\2\2\2\u0157\u0158\t\3\2\2\u0158e\3\2"+
		"\2\2\u0159\u015a\t\4\2\2\u015ag\3\2\2\2\u015b\u015d\4\62;\2\u015c\u015b"+
		"\3\2\2\2\u015d\u015e\3\2\2\2\u015e\u015c\3\2\2\2\u015e\u015f\3\2\2\2\u015f"+
		"\u0160\3\2\2\2\u0160\u0164\7\60\2\2\u0161\u0163\4\62;\2\u0162\u0161\3"+
		"\2\2\2\u0163\u0166\3\2\2\2\u0164\u0162\3\2\2\2\u0164\u0165\3\2\2\2\u0165"+
		"\u0168\3\2\2\2\u0166\u0164\3\2\2\2\u0167\u0169\5j\65\2\u0168\u0167\3\2"+
		"\2\2\u0168\u0169\3\2\2\2\u0169\u016b\3\2\2\2\u016a\u016c\5l\66\2\u016b"+
		"\u016a\3\2\2\2\u016b\u016c\3\2\2\2\u016c\u01aa\3\2\2\2\u016d\u016f\7\60"+
		"\2\2\u016e\u0170\4\62;\2\u016f\u016e\3\2\2\2\u0170\u0171\3\2\2\2\u0171"+
		"\u016f\3\2\2\2\u0171\u0172\3\2\2\2\u0172\u0174\3\2\2\2\u0173\u0175\5j"+
		"\65\2\u0174\u0173\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0177\3\2\2\2\u0176"+
		"\u0178\5l\66\2\u0177\u0176\3\2\2\2\u0177\u0178\3\2\2\2\u0178\u01aa\3\2"+
		"\2\2\u0179\u017b\4\62;\2\u017a\u0179\3\2\2\2\u017b\u017c\3\2\2\2\u017c"+
		"\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u017e\3\2\2\2\u017e\u0180\5j"+
		"\65\2\u017f\u0181\5l\66\2\u0180\u017f\3\2\2\2\u0180\u0181\3\2\2\2\u0181"+
		"\u01aa\3\2\2\2\u0182\u0184\4\62;\2\u0183\u0182\3\2\2\2\u0184\u0185\3\2"+
		"\2\2\u0185\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186\u0187\3\2\2\2\u0187"+
		"\u01aa\5l\66\2\u0188\u0189\7\62\2\2\u0189\u018d\7z\2\2\u018a\u018b\7\62"+
		"\2\2\u018b\u018d\7Z\2\2\u018c\u0188\3\2\2\2\u018c\u018a\3\2\2\2\u018d"+
		"\u0191\3\2\2\2\u018e\u0190\5d\62\2\u018f\u018e\3\2\2\2\u0190\u0193\3\2"+
		"\2\2\u0191\u018f\3\2\2\2\u0191\u0192\3\2\2\2\u0192\u019b\3\2\2\2\u0193"+
		"\u0191\3\2\2\2\u0194\u0198\7\60\2\2\u0195\u0197\5d\62\2\u0196\u0195\3"+
		"\2\2\2\u0197\u019a\3\2\2\2\u0198\u0196\3\2\2\2\u0198\u0199\3\2\2\2\u0199"+
		"\u019c\3\2\2\2\u019a\u0198\3\2\2\2\u019b\u0194\3\2\2\2\u019b\u019c\3\2"+
		"\2\2\u019c\u019d\3\2\2\2\u019d\u019f\t\5\2\2\u019e\u01a0\t\6\2\2\u019f"+
		"\u019e\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0\u01a2\3\2\2\2\u01a1\u01a3\4\62"+
		";\2\u01a2\u01a1\3\2\2\2\u01a3\u01a4\3\2\2\2\u01a4\u01a2\3\2\2\2\u01a4"+
		"\u01a5\3\2\2\2\u01a5\u01a7\3\2\2\2\u01a6\u01a8\5l\66\2\u01a7\u01a6\3\2"+
		"\2\2\u01a7\u01a8\3\2\2\2\u01a8\u01aa\3\2\2\2\u01a9\u015c\3\2\2\2\u01a9"+
		"\u016d\3\2\2\2\u01a9\u017a\3\2\2\2\u01a9\u0183\3\2\2\2\u01a9\u018c\3\2"+
		"\2\2\u01aai\3\2\2\2\u01ab\u01ad\t\7\2\2\u01ac\u01ae\t\6\2\2\u01ad\u01ac"+
		"\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ae\u01b0\3\2\2\2\u01af\u01b1\4\62;\2\u01b0"+
		"\u01af\3\2\2\2\u01b1\u01b2\3\2\2\2\u01b2\u01b0\3\2\2\2\u01b2\u01b3\3\2"+
		"\2\2\u01b3k\3\2\2\2\u01b4\u01b5\t\b\2\2\u01b5m\3\2\2\2\u01b6\u01b9\7)"+
		"\2\2\u01b7\u01ba\5r9\2\u01b8\u01ba\n\t\2\2\u01b9\u01b7\3\2\2\2\u01b9\u01b8"+
		"\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bb\u01bc\7)\2\2\u01bco\3\2\2\2\u01bd\u01c2"+
		"\7$\2\2\u01be\u01c1\5r9\2\u01bf\u01c1\n\n\2\2\u01c0\u01be\3\2\2\2\u01c0"+
		"\u01bf\3\2\2\2\u01c1\u01c4\3\2\2\2\u01c2\u01c0\3\2\2\2\u01c2\u01c3\3\2"+
		"\2\2\u01c3\u01c5\3\2\2\2\u01c4\u01c2\3\2\2\2\u01c5\u01c6\7$\2\2\u01c6"+
		"q\3\2\2\2\u01c7\u01c8\7^\2\2\u01c8\u01cc\t\13\2\2\u01c9\u01cc\5v;\2\u01ca"+
		"\u01cc\5t:\2\u01cb\u01c7\3\2\2\2\u01cb\u01c9\3\2\2\2\u01cb\u01ca\3\2\2"+
		"\2\u01ccs\3\2\2\2\u01cd\u01ce\7^\2\2\u01ce\u01cf\4\62\65\2\u01cf\u01d0"+
		"\4\629\2\u01d0\u01d7\4\629\2\u01d1\u01d2\7^\2\2\u01d2\u01d3\4\629\2\u01d3"+
		"\u01d7\4\629\2\u01d4\u01d5\7^\2\2\u01d5\u01d7\4\629\2\u01d6\u01cd\3\2"+
		"\2\2\u01d6\u01d1\3\2\2\2\u01d6\u01d4\3\2\2\2\u01d7u\3\2\2\2\u01d8\u01d9"+
		"\7^\2\2\u01d9\u01da\7w\2\2\u01da\u01db\5d\62\2\u01db\u01dc\5d\62\2\u01dc"+
		"\u01dd\5d\62\2\u01dd\u01de\5d\62\2\u01dew\3\2\2\2\u01df\u01e4\5z=\2\u01e0"+
		"\u01e3\5z=\2\u01e1\u01e3\5|>\2\u01e2\u01e0\3\2\2\2\u01e2\u01e1\3\2\2\2"+
		"\u01e3\u01e6\3\2\2\2\u01e4\u01e2\3\2\2\2\u01e4\u01e5\3\2\2\2\u01e5y\3"+
		"\2\2\2\u01e6\u01e4\3\2\2\2\u01e7\u01e8\t\f\2\2\u01e8{\3\2\2\2\u01e9\u01ea"+
		"\t\r\2\2\u01ea}\3\2\2\2\u01eb\u01ec\7\61\2\2\u01ec\u01ed\7,\2\2\u01ed"+
		"\u01ee\3\2\2\2\u01ee\u01ef\b?\2\2\u01ef\177\3\2\2\2\u01f0\u01f1\7B\2\2"+
		"\u01f1\u01f2\5x<\2\u01f2\u01f3\7<\2\2\u01f3\u01f8\5x<\2\u01f4\u01f5\7"+
		"\60\2\2\u01f5\u01f7\5x<\2\u01f6\u01f4\3\2\2\2\u01f7\u01fa\3\2\2\2\u01f8"+
		"\u01f6\3\2\2\2\u01f8\u01f9\3\2\2\2\u01f9\u0081\3\2\2\2\u01fa\u01f8\3\2"+
		"\2\2\u01fb\u01fd\t\16\2\2\u01fc\u01fb\3\2\2\2\u01fd\u01fe\3\2\2\2\u01fe"+
		"\u01fc\3\2\2\2\u01fe\u01ff\3\2\2\2\u01ff\u0200\3\2\2\2\u0200\u0201\bA"+
		"\3\2\u0201\u0083\3\2\2\2\u0202\u0203\7,\2\2\u0203\u0204\7\61\2\2\u0204"+
		"\u0205\3\2\2\2\u0205\u0206\bB\4\2\u0206\u0085\3\2\2\2\u0207\u0209\t\16"+
		"\2\2\u0208\u0207\3\2\2\2\u0209\u020a\3\2\2\2\u020a\u0208\3\2\2\2\u020a"+
		"\u020b\3\2\2\2\u020b\u020c\3\2\2\2\u020c\u020d\bC\5\2\u020d\u0087\3\2"+
		"\2\2\u020e\u020f\7\61\2\2\u020f\u0210\7\61\2\2\u0210\u0214\3\2\2\2\u0211"+
		"\u0213\n\17\2\2\u0212\u0211\3\2\2\2\u0213\u0216\3\2\2\2\u0214\u0212\3"+
		"\2\2\2\u0214\u0215\3\2\2\2\u0215\u0218\3\2\2\2\u0216\u0214\3\2\2\2\u0217"+
		"\u0219\7\17\2\2\u0218\u0217\3\2\2\2\u0218\u0219\3\2\2\2\u0219\u021a\3"+
		"\2\2\2\u021a\u021b\7\f\2\2\u021b\u021c\3\2\2\2\u021c\u021d\bD\6\2\u021d"+
		"\u0089\3\2\2\2,\2\3\u00d6\u013c\u013f\u0146\u0149\u014c\u0152\u0155\u015e"+
		"\u0164\u0168\u016b\u0171\u0174\u0177\u017c\u0180\u0185\u018c\u0191\u0198"+
		"\u019b\u019f\u01a4\u01a7\u01a9\u01ad\u01b2\u01b9\u01c0\u01c2\u01cb\u01d6"+
		"\u01e2\u01e4\u01f8\u01fe\u020a\u0214\u0218";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}